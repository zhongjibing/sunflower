<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icezhg.sunflower.dao.ConfigDao">

    <resultMap id="BaseResultMap" type="com.icezhg.sunflower.domain.Config">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="key" column="key" jdbcType="VARCHAR"/>
        <result property="value" column="value" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="CHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,`name`,`key`,
        `value`,`type`,create_by,
        create_time,update_by,update_time,
        remark
    </sql>

    <select id="findById" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_config
        where  id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findByKey" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_config
        where  `key` = #{key,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByIds" parameterType="list">
        delete from sys_config
        where id in
        <foreach collection="list" item="item" open="(" separator=", " close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </delete>

    <insert id="insert" parameterType="com.icezhg.sunflower.domain.Config" useGeneratedKeys="true" keyProperty="id">
        insert into sys_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">`name`,</if>
            <if test="key != null">`key`,</if>
            <if test="value != null">`value`,</if>
            <if test="type != null">`type`,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="name != null">#{name,jdbcType=VARCHAR},</if>
            <if test="key != null">#{key,jdbcType=VARCHAR},</if>
            <if test="value != null">#{value,jdbcType=VARCHAR},</if>
            <if test="type != null">#{type,jdbcType=CHAR},</if>
            <if test="createBy != null">#{createBy,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateBy != null">#{updateBy,jdbcType=VARCHAR},</if>
            <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
            <if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <update id="update" parameterType="com.icezhg.sunflower.domain.Config">
        update sys_config
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="key != null">
                `key` = #{key,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                `value` = #{value,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=CHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where   id = #{id,jdbcType=INTEGER}
    </update>

    <sql id="findCondition">
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="isFuzzyQuery">
                <if test="name != null">
                    and LOCATE(#{name,jdbcType=VARCHAR}, `name`) > 0
                </if>
                <if test="key != null">
                    and LOCATE(#{key,jdbcType=VARCHAR}, `key`) > 0
                </if>
            </if>
            <if test="!isFuzzyQuery">
                <if test="name != null">
                    and `name` = #{name,jdbcType=VARCHAR}
                </if>
                <if test="key != null">
                    and `key` = #{key,jdbcType=VARCHAR}
                </if>
            </if>
            <if test="type != null">
                and `type` = #{type,jdbcType=CHAR}
            </if>
            <if test="beginTime != null and endTime != null">
                and create_time between #{beginTime,jdbcType=TIMESTAMP} and #{endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>

    <select id="count" parameterType="map" resultType="int">
        select count(*)
        from sys_config
        <include refid="findCondition"/>
    </select>

    <select id="find" parameterType="map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from sys_config
        <include refid="findCondition"/>
        order by id asc
        limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
</mapper>
